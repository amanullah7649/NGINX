# Number of worker processes NGINX will spawn. Generally set to the number of CPU cores for better performance.
worker_processes 1;

# Specify the PID file location
pid /run/nginx.pid;

events {
    # Maximum number of simultaneous connections each worker can handle.
    worker_connections 1024;
}

http {
    # Includes MIME type definitions to correctly serve files with proper Content-Type.
    include       mime.types;
    
    # Default MIME type for files if not specified in mime.types.
    default_type  application/octet-stream;

    # Define cache settings
    # Path for cache storage, with levels for subdirectory hierarchy.
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:1m inactive=60m;

    # Define an upstream group named 'nodejs_cluster' with load balancing.
    upstream nodejs_cluster {
        # Least connected load balancing algorithm: sends requests to the server with the fewest active connections.
        least_conn;
        
        # Backend Node.js servers handling the requests.
        server 127.0.0.1:3000;
        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
    }

    # Define rate limiting zone
    # Shared memory zone 'rate_limit_zone' to store rate limit keys, allowing 5 requests per minute.
    limit_req_zone $binary_remote_addr zone=rate_limit_zone:10m rate=5r/m;

    # Server block handling requests to localhost on port 80.
    server {
        # Listen for connections on port 80.
        listen       80;
        
        # Specify the server's domain name.
        server_name  localhost;

        location / {
            # Apply rate limiting for incoming requests
            limit_req zone=rate_limit_zone burst=2 nodelay;

            # Pass incoming requests to the upstream 'nodejs_cluster'.
            proxy_pass         http://nodejs_cluster;

            # Enable caching with the defined cache zone.
            proxy_cache my_cache;
            
            # Cache responses with status 200 for 10min or 10s
            proxy_cache_valid 200 10s;

            # Add caching status to response headers for debugging.
            add_header X-Cache-Status $upstream_cache_status;

            # Forward the original Host header to the backend.
            proxy_set_header   Host $host;
            
            # Forward the real client IP address to the backend.
            proxy_set_header   X-Real-IP $remote_addr;
            
            # Add the forwarded-for chain to the header for tracking client IPs through proxies.
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;

            # Timeout settings for proxy connections.
            proxy_connect_timeout  60s;  # Timeout for connecting to the backend.
            proxy_read_timeout     60s;  # Timeout for reading a response from the backend.
            proxy_send_timeout     60s;  # Timeout for sending a request to the backend.

            # Allow handling of larger requests, such as file uploads.
            client_max_body_size   50M;
        }

        # Path to access log for tracking all incoming requests.
        access_log /var/log/nginx/ola_access.log;

        # Path to error log for recording issues with the server.
        error_log  /var/log/nginx/ola_error.log;
    }
}
